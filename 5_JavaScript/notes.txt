~ formely LiveScript. standard: ECMAScript
~ JS is Interpreted (Python, Ruby) whereas Java (C++) is compiled
~ Documentation: https://developer.mozilla.org/en-US/docs/Web/JavaScript
~ function("message"); eg: alert("hello");
~ Datatypes:
    >> String, Numbers, Boolean.
    >> typeof(); gives type of Datatypes
~ prompt(); : input
~ Variables: 
    >> var myName = "Ritviz";
    >> Naming Conventions:
        >> meaningful names
        >> cannot begin w/ no.
        >> cannnot contain space
        >> only letter, no., $ and _
~ Strings:
    >> Concatenation:
        >> "a" + "b" = ab
    >> Length:
        >> str.length; -- length of the string
    >> Slice:
        >> str.slice(a, b); a -- inclusive. b -- exclusive.
    >> Change Case:
        >> str.toUpperCase(); 
        >> str.toLowerCase();
~ Numbers:
    >> Arithmetic Operators
        >> +. -. *. /. %.
    >> Increment (a++), Decrement (b--);
~ Function:
    >> Package of instructions.
    >> function name(){}
~ console.log(); -- for developers;
~ Math.floor(); -- round down 
~ Math.round(); -- round off
~ Math.random(); -- never reaches 1.
~ prompt(); -- displays a dialog box that prompts the user for input
~ == (doesnt care about the data type) whereas === (cares about the data type)
~ .push -- insert, .pop -- remove.

DOM: The Document Object Model
    >> The W3C Document Object Model (DOM) is a platform and language-neutral interface that allows programs and scripts to dynamically access and update the content, structure, and style of a document.
    >> Catalouges the web pages in individual object that we can select and Change
    >> Associated data is changed in tree.

~ Inline js:
    >> onload -- what has to be done on load
    >> difficult to debug
~ Internal js:
    >> <script> alert("Hello"); </script>
~ External js:
    >> <script src=""> // something </script>

~ Objects can have Properties & Methods:
    >> Properties:
        >> eg. car.color -- gives property (getter)
        >> and, car.doors = 0; (setter).
        >> innerHTML, style, firtChild
    >> Methods:
        >> car.drive(); (call method).
        >> click(), appendChild(), setAttribute()
~ Selecting:
    >> document.querySelector(#id li); or,
    >> document.querySelectorAll(#id .class);
~ Manipulating Style:
    >> eg. document.querySelector("h1").style.fontSize = "10 rem";
        >> specify as string.