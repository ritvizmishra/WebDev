~ Frontend - user sees; Backend - behind the scene
~ Bootstrap: frontend framework, designing easy; open source (twitter)
~ It helps in making adaptable layout
~ Pre-styled elements. 
~ Practice frameworks: https://www.codeply.com/
~ Documentation: https://getbootstrap.com/docs/4.0/getting-started/introduction/
~ Pre-build sites could be found in examples
~ CDN: content delivery network, quickly accessible
~ User might already have cached in bootstrap file, as several sites use it, cutdown on latency
~ {*}Starter Template: overall page requirements.
~ Sourcing from local device negates caching
~ Wireframing: low level design of web
~ MockUp: high level design
~ Websites for reference: https://www.awwwards.com/websites/com/
~ UI patterns: http://ui-patterns.com/patterns
~ dribble(design): https://dribbble.com/search/website
~ navbar: directory
~ bootstrap CSS link must go before your own CSS
~ there are 12 col in a row on a screen: e.g class="col-md-6"
~ Container: layout element & required when using our default grid system
~ Button: add button
~ Font Awesome: https://fontawesome.com/icons?d=gallery&q=apple
~ transform: rotate(); -- to rotate;
~ Visual Hierarchy: directing users
~ Carousel: slideshow
~ aria-hidden : make screen reader to skip over this part.
~ Bootsnip: https://bootsnipp.com/
~ CSS Z-index: 3rd coordinate; towards or away
    >> it only works if your element has positioning property
    >> only static doesn't work
    >> flowchart: https://drive.google.com/uc?export=download&id=13Z1_Fgbh3QESIIoFpXUgo1F4sVjB9di2
~ Responsive Breakpoints: 
    >> CSS Meda Queries: @media <type> <feature>
            >> e.g @media screen (min-width: 900px){
                        // change something
                    }
    >> Test Mobile Friendliness: https://search.google.com/test/mobile-friendly
~ Code Refactoring: DRY Coding Practice 
    >> Readability
    >> Modularity : reuse
    >> Efficiency
    >> Length
~ CSS Selectors:
    >> Multiple Selectors e.g h1, h2, h3 { }
    >> Hierchical Selector e.g #title .container-fluid { } parent >> child
    >> Combined Selector e.g .container-fluid#title{ } child >> parent
~ CSS Selector Priority 
    >> Last CSS property has priority.
        >> id > class > main
    >> Preventing conflicting rules
        >> use id sparingly
        